<ui:FluentWindow
    x:Class="AnnoDesigner.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:converters="clr-namespace:AnnoDesigner.Converters"
    xmlns:coreConverters="clr-namespace:AnnoDesigner.Core.Converters;assembly=AnnoDesigner.Core"
    xmlns:coreModels="clr-namespace:AnnoDesigner.Core.Models;assembly=AnnoDesigner.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:l="clr-namespace:AnnoDesigner.Localization"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:modelPresetsTree="clr-namespace:AnnoDesigner.Models.PresetsTree"
    xmlns:my="clr-namespace:AnnoDesigner"
    xmlns:myBehaviors="clr-namespace:AnnoDesigner.Behaviors"
    xmlns:properties="clr-namespace:AnnoDesigner.Properties"
    xmlns:viewModel="clr-namespace:AnnoDesigner.ViewModels"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    x:Name="mainWindow"
    Width="{Binding MainWindowWidth, Mode=TwoWay}"
    Height="{Binding MainWindowHeight, Mode=TwoWay}"
    MinWidth="640"
    MinHeight="480"
    d:DataContext="{d:DesignInstance Type=viewModel:MainViewModel,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="1038"
    d:DesignWidth="1036"
    Closing="WindowClosing"
    Left="{Binding MainWindowLeft, Mode=TwoWay}"
    Loaded="WindowLoaded"
    Top="{Binding MainWindowTop, Mode=TwoWay}"
    WindowState="{Binding MainWindowWindowState, Mode=TwoWay}"
    mc:Ignorable="d" 
    
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ExtendsContentIntoTitleBar="True"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    WindowBackdropType="Mica"
    WindowCornerPreference="Round"
    WindowStartupLocation="CenterScreen"
    >
    <Window.Resources>
        <coreConverters:UnsavedChangesConverter x:Key="converterUnsavedChanges" />
        <coreConverters:BoolToVisibilityConverter
            x:Key="converterBoolToVisibility"
            FalseValue="Hidden"
            TrueValue="Visible" />
        <coreConverters:BoolToVisibilityConverter
            x:Key="converterBoolToVisibilityCollapsed"
            FalseValue="Collapsed"
            TrueValue="Visible" />
        <xctk:ColorToSolidColorBrushConverter x:Key="converterColorToSolidColorBrush" />
        <HierarchicalDataTemplate DataType="{x:Type coreModels:AnnoObject}">
            <TextBlock Text="{Binding Label}" />
        </HierarchicalDataTemplate>

        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Padding" Value="0,16,0,16" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ui:TitleBar 
            Grid.Row="0"
             Icon="/AnnoDesigner;component/icon.ico" Margin="0,6,0,0" >
            <ui:TitleBar.Title>
                <MultiBinding Converter="{StaticResource converterUnsavedChanges}">
                    <Binding Path="MainWindowTitle" />
                    <Binding Path="AnnoCanvas.UndoManager.IsDirty" />
                </MultiBinding>
            </ui:TitleBar.Title>
            <ui:TitleBar.Header>
                <ui:Button Content="Profile" Appearance="Secondary" />
            </ui:TitleBar.Header>
        </ui:TitleBar>
        <xctk:BusyIndicator Grid.Row="1" x:Name="busyIndicator">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="100" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="300" MinWidth="100" />
                </Grid.ColumnDefinitions>

                <Menu
                Name="Menu"
                Grid.ColumnSpan="3" 
                VerticalAlignment="Top">
                    <Menu.Resources>
                        <Style TargetType="{x:Type MenuItem}">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Menu.Resources>
                    <MenuItem Header="{l:Localize File}" TabIndex="20">
                        <MenuItem
                        Command="ApplicationCommands.New"
                        CommandTarget="{Binding ElementName=annoCanvas}"
                        Header="{l:Localize NewCanvas}" />
                        <MenuItem
                        Command="ApplicationCommands.Open"
                        CommandTarget="{Binding ElementName=annoCanvas}"
                        Header="{l:Localize Open}" />
                        <MenuItem
                        Command="ApplicationCommands.Save"
                        CommandTarget="{Binding ElementName=annoCanvas}"
                        Header="{l:Localize Save}" />
                        <MenuItem
                        Command="ApplicationCommands.SaveAs"
                        CommandTarget="{Binding ElementName=annoCanvas}"
                        Header="{l:Localize SaveAs}" />
                        <Separator />
                        <MenuItem Command="{Binding CopyLayoutToClipboardCommand}" Header="{l:Localize CopyLayoutToClipboard}" />
                        <MenuItem Command="{Binding LoadLayoutFromJsonCommand}" Header="{l:Localize LoadLayoutFromJson}" />
                        <Separator />
                        <MenuItem
                        Header="{l:Localize RecentFiles}"
                        IsEnabled="{Binding HasRecentFiles}"
                        ItemsSource="{Binding RecentFiles}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem">
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path, Mode=OneTime}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.OpenRecentFileCommand}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <Separator />
                        <MenuItem
                        Command="{Binding CloseWindowCommand}"
                        CommandParameter="{Binding ElementName=mainWindow}"
                        Header="{l:Localize Exit}" />
                    </MenuItem>
                    <MenuItem Header="{l:Localize Export}" TabIndex="22">
                        <MenuItem Command="{Binding ExportImageCommand}" Header="{l:Localize ExportImage}" />
                        <Separator />
                        <MenuItem Header="{l:Localize UseCurrentZoomOnExportedImage}"
                              IsCheckable="True"
                              IsChecked="{Binding UseCurrentZoomOnExportedImageValue}" />
                        <MenuItem Header="{l:Localize RenderSelectionHighlightsOnExportedImage}"
                              IsCheckable="True"
                              IsChecked="{Binding RenderSelectionHighlightsOnExportedImageValue}" />
                        <MenuItem Header="{l:Localize RenderVersionOnExportedImage}"
                              IsCheckable="True"
                              IsChecked="{Binding RenderVersionOnExportedImageValue}" />
                    </MenuItem>
                    <MenuItem
                    Header="{l:Localize Language}"
                    ItemsSource="{Binding Languages}"
                    TabIndex="23">
                        <MenuItem.Resources>
                            <Image
                            x:Key="flagImage"
                            Height="22"
                            x:Shared="False"
                            Source="{Binding FlagPath}" />
                        </MenuItem.Resources>
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Icon" Value="{StaticResource flagImage}" />
                                <Setter Property="Header" Value="{Binding Name}" />
                                <Setter Property="IsCheckable" Value="True" />
                                <Setter Property="IsChecked" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.LanguageSelectedCommand}" />
                                <Setter Property="CommandParameter" Value="{Binding}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem
                    HorizontalAlignment="Right"
                    Header="{l:Localize ManageStats}"
                    TabIndex="24">
                        <MenuItem
                        Command="{Binding ShowStatisticsCommand}"
                        Header="{l:Localize ShowStats}"
                        IsCheckable="True"
                        IsChecked="{Binding StatisticsViewModel.IsVisible}" />
                        <Separator />
                        <MenuItem
                        Command="{Binding ShowStatisticsBuildingCountCommand}"
                        Header="{l:Localize BuildingCount}"
                        IsCheckable="True"
                        IsChecked="{Binding StatisticsViewModel.ShowStatisticsBuildingCount}"
                        IsEnabled="{Binding StatisticsViewModel.IsVisible, Mode=OneWay}" />
                    </MenuItem>
                    <MenuItem Header="{l:Localize View}">
                        <MenuItem
                        Header="{l:Localize ShowGrid}"
                        IsCheckable="True"
                        IsChecked="{Binding CanvasShowGrid}" />
                        <MenuItem
                        Header="{l:Localize ShowLabels}"
                        IsCheckable="True"
                        IsChecked="{Binding CanvasShowLabels}" />
                        <MenuItem
                        Header="{l:Localize ShowIcons}"
                        IsCheckable="True"
                        IsChecked="{Binding CanvasShowIcons}" />
                        <MenuItem
                        Header="{l:Localize ShowTrueInfluenceRange}"
                        IsCheckable="True"
                        IsChecked="{Binding CanvasShowTrueInfluenceRange}" />
                        <MenuItem
                        Header="{l:Localize ShowInfluences}"
                        IsCheckable="True"
                        IsChecked="{Binding CanvasShowInfluences}" />
                        <MenuItem
                        Header="{l:Localize ShowHarborBlockedArea}"
                        IsCheckable="True"
                        IsChecked="{Binding CanvasShowHarborBlockedArea}" />
                        <MenuItem
                        Header="{l:Localize ShowPanorama}"
                        IsCheckable="True"
                        IsChecked="{Binding CanvasShowPanorama}" />
                    </MenuItem>
                    <MenuItem Header="{l:Localize Tools}">
                        <MenuItem Command="{Binding CanvasNormalizeCommand}" Header="{l:Localize Normalize}" />
                        <MenuItem Command="{Binding CanvasResetZoomCommand}" Header="{l:Localize ResetZoom}" />
                        <MenuItem Command="{Binding MergeRoadsCommand}" Header="{l:Localize MergeRoads}" />
                        <Separator />
                        <MenuItem Command="{Binding RegisterExtensionCommand}" Header="{l:Localize RegisterFileExtension}" />
                        <MenuItem Command="{Binding UnregisterExtensionCommand}" Header="{l:Localize UnregisterFileExtension}" />
                        <Separator />
                        <MenuItem Command="{Binding ShowPreferencesWindowCommand}">
                            <MenuItem.Header>
                                <!--  Header property is an object, so can't just do {Binding Tools, ... } directly in Header attribute  -->
                                <Run Text="{l:Localize Preferences, StringFormat='\{0\}...', Mode=OneWay}" />
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem
                    HorizontalAlignment="Right"
                    Header="{l:Localize Help}"
                    TabIndex="25">
                        <MenuItem Command="{Binding OpenProjectHomepageCommand}" Header="{l:Localize GoToProjectHomepage}" />
                        <MenuItem Command="{Binding ShowWelcomeWindowCommand}" Header="{l:Localize OpenWelcomePage}" />
                        <MenuItem Command="{Binding ShowAboutWindowCommand}" Header="{l:Localize AboutAnnoDesigner}" />
                        <Separator />
                        <MenuItem Command="{Binding ShowLicensesWindowCommand}" Header="{l:Localize ViewLicenses}" />
                    </MenuItem>
                </Menu>

                <Grid
                x:Name="gridMain"
                Grid.Row="1"
                Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="17*" MinWidth="100" />
                        <ColumnDefinition Width="31*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition
                        x:Name="colStatisticsView"
                        Width="Auto"
                        MinWidth="100" />
                    </Grid.ColumnDefinitions>
                    <!--
                    ScrollViewer steals focus (all key events) unless `Focusable` is set to false. Scrolling via arrow keys and page up/down stil works
                    as the event will still bubble up to the scroll viewer as its not handled in AnnoCanvas
                -->
                    <ScrollViewer
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    CanContentScroll="True"
                    Focusable="False"
                    HorizontalScrollBarVisibility="{Binding ShowScrollbars}"
                    VerticalScrollBarVisibility="{Binding ShowScrollbars}">
                        <my:AnnoCanvas x:Name="annoCanvas" />
                    </ScrollViewer>

                    <GridSplitter
                    x:Name="splitterStatisticsView"
                    Grid.Column="2"
                    Width="5"
                    Background="{DynamicResource ControlElevationBorderBrush}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Stretch" />

                    <my:StatisticsView
                    x:Name="statisticsView"
                    Grid.Column="3"
                    DataContext="{Binding StatisticsViewModel}" />

                </Grid>

                <GridSplitter
                Grid.Row="1"
                Grid.Column="1"
                    Background="{DynamicResource ControlElevationBorderBrush}"
                Width="5"
                HorizontalAlignment="Center"
                VerticalAlignment="Stretch" />
                <Grid Grid.Column="2" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="8*"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="3*"/>
                    </Grid.RowDefinitions>

                    <DockPanel
                        x:Name="BuildingsPanel"
                        LastChildFill="True"  >
                        <Expander IsExpanded="True" DockPanel.Dock="Top" Header="{l:Localize LayoutSettings}" BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}">
                            <DockPanel LastChildFill="False">
                                <Label Content="{l:Localize Version}" />
                                <TextBox
                                    Width="140"
                                    Height="32"
                                    DockPanel.Dock="Right"
                                    IsEnabled="True"
                                    Text="{Binding LayoutSettingsViewModel.LayoutVersionDisplayValue}" />
                            </DockPanel>
                        </Expander>
                        <Expander IsExpanded="True" DockPanel.Dock="Top" Header="{l:Localize BuildingSettings}" BorderBrush="{DynamicResource ExpanderHeaderBorderBrush}">
                            <StackPanel>
                                <DockPanel Height="43" LastChildFill="False" VerticalAlignment="Center">
                                    <Label Content="{l:Localize Size}" VerticalAlignment="Center" />
                                    <ui:NumberBox
                                        Width="58"  
                                        DockPanel.Dock="Right" 
                                        IsEnabled="True"
                                        Minimum="1"
                                        TabIndex="1"
                                        Value="{Binding BuildingSettingsViewModel.BuildingHeight, FallbackValue=4}" SpinButtonPlacementMode="Compact"/>
                                    <Label Content="x" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="5,0,6,0" />
                                    <ui:NumberBox 
                                        Width="60" 
                                        DockPanel.Dock="Right" 
                                        IsEnabled="True"
                                        Minimum="1"
                                        TabIndex="0"
                                        Value="{Binding BuildingSettingsViewModel.BuildingWidth, FallbackValue=4}" SpinButtonPlacementMode="Compact" />
                                </DockPanel>
                                <DockPanel   LastChildFill="False" Visibility="Hidden">
                                    <Label Content="{l:Localize Color}" />

                                    <xctk:ColorPicker
                                        x:Name="colorPicker"
                                        Width="140"
                                        AdvancedTabHeader="{l:Localize Advanced}"
                                        AvailableColorsHeader="{l:Localize AvailableColors}"
                                        AvailableColorsSortingMode="HueSaturationBrightness"
                                        DisplayColorAndName="True"
                                        DisplayColorTooltip="True"
                                        DockPanel.Dock="Right"
                                        RecentColorsHeader="{l:Localize RecentColors}"
                                        SelectedColor="{Binding BuildingSettingsViewModel.SelectedColor}"
                                        ShowAvailableColors="True"
                                        ShowDropDownButton="True"
                                        ShowRecentColors="True"
                                        StandardColorsHeader="{l:Localize StandardColors}"
                                        StandardTabHeader="{l:Localize Standard}"
                                        TabIndex="2" />
                                </DockPanel>
                                <DockPanel   LastChildFill="False" Visibility="Hidden">
                                    <!--<Button Width="32"
                                    DockPanel.Dock="Right"
                                    Command="{Binding BuildingSettingsViewModel.ApplyColorToSelectionCommand}"
                                    ToolTip="{Binding BuildingSettingsViewModel.TextApplyColorToSelectionToolTip}">
                                <Button.Resources>
                                    <Style x:Key="stylePath"
                                           TargetType="{x:Type Path}">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled"
                                                     Value="True">
                                                <Setter Property="Fill"
                                                        Value="#FF000000" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled"
                                                     Value="False">
                                                <Setter Property="Fill"
                                                        Value="Gray" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Resources>
                                <Button.Content>
                                    <Grid Width="24"
                                          Height="24"
                                          Visibility="Visible">
                                        <Path Data="M10.237976,16.558633L15.362,21.68467C15.362,21.68467 15.362,32.671771 0,30.001748 3.9839783,29.020736 3.5959778,25.791718 5.9639893,20.122661 7.1269836,17.340638 10.237976,16.558633 10.237976,16.558633z M30.389984,0.00048406667C30.752991,0.0094867014 31.134979,0.14547426 31.494995,0.50648519 32.77597,1.7864956 31.215973,3.3455154 31.215973,3.3455152 31.215973,3.3455154 23.415985,11.147588 21.855988,12.708591 20.296997,14.270602 18.406982,18.619656 18.406982,18.619656L13.28299,13.495602C13.28299,13.495602 17.733978,11.707591 19.29599,10.147579 20.855988,8.5855531 28.655975,0.78248873 28.655975,0.78248861 28.655975,0.78248873 29.461975,-0.022526528 30.389984,0.00048406667z"
                                              Stretch="Uniform"
                                              Width="16"
                                              Height="16"
                                              Margin="0,0,0,0"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{StaticResource stylePath}">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <TransformGroup.Children>
                                                        <RotateTransform Angle="0" />
                                                        <ScaleTransform ScaleX="1"
                                                                        ScaleY="1" />
                                                    </TransformGroup.Children>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Button.Content>
                            </Button>-->
                                    <!--  used when predefined colors are available  -->
                                    <xctk:SplitButton
                                        Width="48"
                                        Command="{Binding BuildingSettingsViewModel.ApplyColorToSelectionCommand}"
                                        DockPanel.Dock="Right"
                                        ToolTip="{l:Localize ApplyColorToSelectionToolTip}">
                                        <xctk:SplitButton.Resources>
                                            <Style x:Key="stylePath" TargetType="{x:Type Path}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="True">
                                                        <Setter Property="Fill" Value="#FF000000" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Fill" Value="Gray" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </xctk:SplitButton.Resources>
                                        <xctk:SplitButton.DropDownContent>
                                            <Button
                                                Command="{Binding BuildingSettingsViewModel.ApplyPredefinedColorToSelectionCommand}"
                                                Content="{l:Localize ApplyPredefinedColorToSelection}"
                                                ToolTip="{l:Localize ApplyPredefinedColorToSelectionToolTip}" />
                                        </xctk:SplitButton.DropDownContent>
                                        <Grid
                                            Width="24"
                                            Height="24"
                                            Visibility="Visible">
                                            <Path
                                                Width="16"
                                                Height="16"
                                                Margin="0,0,0,0"
                                                Data="M10.237976,16.558633L15.362,21.68467C15.362,21.68467 15.362,32.671771 0,30.001748 3.9839783,29.020736 3.5959778,25.791718 5.9639893,20.122661 7.1269836,17.340638 10.237976,16.558633 10.237976,16.558633z M30.389984,0.00048406667C30.752991,0.0094867014 31.134979,0.14547426 31.494995,0.50648519 32.77597,1.7864956 31.215973,3.3455154 31.215973,3.3455152 31.215973,3.3455154 23.415985,11.147588 21.855988,12.708591 20.296997,14.270602 18.406982,18.619656 18.406982,18.619656L13.28299,13.495602C13.28299,13.495602 17.733978,11.707591 19.29599,10.147579 20.855988,8.5855531 28.655975,0.78248873 28.655975,0.78248861 28.655975,0.78248873 29.461975,-0.022526528 30.389984,0.00048406667z"
                                                RenderTransformOrigin="0.5,0.5"
                                                Stretch="Uniform"
                                                Style="{StaticResource stylePath}">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="0" />
                                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>
                                    </xctk:SplitButton>
                                </DockPanel>
                                <DockPanel LastChildFill="True">
                                    <DockPanel.Resources>
                                        <Style x:Key="styleRectangle" TargetType="{x:Type Rectangle}">
                                            <Setter Property="Margin" Value="2" />
                                        </Style>
                                    </DockPanel.Resources>
                                    <Expander
                                        MaxWidth="{Binding ActualWidth, ElementName=BuildingsPanel, Mode=OneWay}"
                                        MaxHeight="90"
                                        Header="{l:Localize ColorsInLayout}"
                                        IsExpanded="False"
                                        ToolTip="{l:Localize ColorsInLayoutToolTip}"
                                        Visibility="{Binding BuildingSettingsViewModel.ShowColorsInLayout, Converter={StaticResource converterBoolToVisibility}}">
                                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                                            <ItemsControl ItemsSource="{Binding BuildingSettingsViewModel.ColorsInLayout}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Rectangle
                                                            Fill="{Binding MediaColor, Converter={StaticResource converterColorToSolidColorBrush}}"
                                                            Stroke="#FFABADB3"
                                                            StrokeThickness="1"
                                                            Style="{StaticResource styleRectangle}"
                                                            ToolTip="{Binding}">
                                                            <Rectangle.InputBindings>
                                                                <MouseBinding
                                                                    Command="{Binding DataContext.BuildingSettingsViewModel.UseColorInLayoutCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, Mode=FindAncestor}}"
                                                                    CommandParameter="{Binding}"
                                                                    Gesture="LeftDoubleClick" />
                                                            </Rectangle.InputBindings>
                                                        </Rectangle>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel
                                                            Margin="0"
                                                            HorizontalAlignment="Right"
                                                            ItemHeight="20"
                                                            ItemWidth="20"
                                                            Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </Expander>
                                </DockPanel>
                                <DockPanel LastChildFill="False" Margin="0,8,0,0">
                                    <Label Content="{l:Localize Label}" VerticalAlignment="Center" />
                                    <TextBox
                                        Width="140" 
                                        DockPanel.Dock="Right"
                                        IsEnabled="True"
                                        TabIndex="4"
                                        Text="{Binding BuildingSettingsViewModel.BuildingName}" />
                                    <TextBox
                                        Width="140"
                                        Height="10"
                                        DockPanel.Dock="Right"
                                        IsEnabled="False"
                                        Text="{Binding BuildingSettingsViewModel.BuildingIdentifier}"
                                        Visibility="Collapsed" />
                                    <TextBox
                                        Width="140"
                                        Height="10"
                                        DockPanel.Dock="Right"
                                        IsEnabled="False"
                                        Text="{Binding BuildingSettingsViewModel.BuildingRealName}"
                                        Visibility="Collapsed" />
                                </DockPanel>
                                <DockPanel Height="46" LastChildFill="False">
                                    <Label VerticalAlignment="Center" Content="{l:Localize Icon}" />
                                    <ComboBox
                                        x:Name="comboBoxIcon"
                                        Width="140"
                                        Height="46"
                                        DockPanel.Dock="Right"
                                        IsEnabled="True"
                                        ItemsSource="{Binding AvailableIcons}"
                                        ScrollViewer.CanContentScroll="True"
                                        SelectedItem="{Binding SelectedIcon}"
                                        TabIndex="6"
                                        TextSearch.TextPath="DisplayName">
                                        <ComboBox.Resources>
                                            <Style TargetType="{x:Type Popup}">
                                                <!--<Setter Property="MinWidth"
                                                Value="140" />
                                        <Setter Property="MaxWidth"
                                                Value="340" />-->
                                                <Setter Property="Width" Value="300" />
                                            </Style>
                                            <converters:IconImageToDisplayNameConverter x:Key="converterIconImageToDisplayName" />
                                        </ComboBox.Resources>
                                        <ComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </ComboBox.ItemsPanel>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Viewbox Margin="5">
                                                        <Image
                                                            Width="23"
                                                            Height="32"
                                                            Source="{Binding Icon}" />
                                                    </Viewbox>
                                                    <TextBlock
                                                        Margin="0,5,5,5"
                                                        VerticalAlignment="Center"
                                                        Text="{Binding ., Converter={StaticResource converterIconImageToDisplayName}}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </DockPanel>
                                <DockPanel LastChildFill="False" Margin="0,8,0,0">
                                    <Label Content="{l:Localize InfluenceType}" VerticalAlignment="Center" />
                                    <ComboBox
                                        Width="140" 
                                        DisplayMemberPath="Name"
                                        DockPanel.Dock="Right"
                                        IsEnabled="True"
                                        ItemsSource="{Binding BuildingSettingsViewModel.BuildingInfluences}"
                                        SelectedItem="{Binding BuildingSettingsViewModel.SelectedBuildingInfluence}"
                                        TabIndex="6" />
                                </DockPanel>
                                <DockPanel
                            
                                    LastChildFill="False"
                                    Visibility="{Binding BuildingSettingsViewModel.IsBuildingInfluenceInputRadiusVisible, Converter={StaticResource converterBoolToVisibilityCollapsed}}" Margin="0,6,0,0">
                                    <Label Content="{l:Localize Radius}" VerticalAlignment="Center" />
                                    <ui:NumberBox
                                        Width="140" 
                                        DockPanel.Dock="Right" 
                                        IsEnabled="True"
                                        Minimum="0"
                                        TabIndex="8"
                                        Value="{Binding BuildingSettingsViewModel.BuildingRadius, FallbackValue=1}" SpinButtonPlacementMode="Compact" />
                                </DockPanel>
                                <DockPanel
                                    LastChildFill="False"
                                    Visibility="{Binding BuildingSettingsViewModel.IsBuildingInfluenceInputRangeVisible, Converter={StaticResource converterBoolToVisibilityCollapsed}}" Margin="0,5,0,0">
                                    <Label Content="{l:Localize Distance}" VerticalAlignment="Center" />
                                    <ui:NumberBox
                                        Width="140" 
                                        DockPanel.Dock="Right" 
                                        IsEnabled="True"
                                        Minimum="0"
                                        TabIndex="9"
                                        Value="{Binding BuildingSettingsViewModel.BuildingInfluenceRange, FallbackValue=1}" SpinButtonPlacementMode="Compact" />
                                </DockPanel>
                                <DockPanel
                                    LastChildFill="False"
                                    Visibility="{Binding BuildingSettingsViewModel.IsBuildingInfluenceInputRangeVisible, Converter={StaticResource converterBoolToVisibilityCollapsed}}" Margin="0,4,0,0">
                                    <CheckBox
                                        Margin="0,3,0,5"
                                        Content="{l:Localize PavedStreet}"
                                        DockPanel.Dock="Right"
                                        IsChecked="{Binding BuildingSettingsViewModel.IsPavedStreet}"
                                        IsThreeState="False"
                                        ToolTip="{l:Localize PavedStreetToolTip}">
                                        <CheckBox.Style>
                                            <Style TargetType="{x:Type CheckBox}"  >
                                                <Setter Property="Background" Value="{DynamicResource SystemFillColorSuccessBrush}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding BuildingSettingsViewModel.IsPavedStreet}" Value="True">
                                                        <Setter Property="Background" Value="{DynamicResource SystemFillColorCriticalBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                </DockPanel>
                                <DockPanel LastChildFill="False">
                                    <Label Content="{l:Localize Options}" />
                                    <StackPanel DockPanel.Dock="Right" Orientation="Vertical">
                                        <CheckBox
                                            Margin="0,5,0,5"
                                            VerticalAlignment="Center"
                                            Content="{l:Localize EnableLabel}"
                                            IsChecked="{Binding BuildingSettingsViewModel.IsEnableLabelChecked}"
                                            IsThreeState="False"
                                            TabIndex="9" />
                                        <CheckBox
                                            Margin="0,0,0,5"
                                            VerticalAlignment="Center"
                                            Content="{l:Localize Borderless}"
                                            IsChecked="{Binding BuildingSettingsViewModel.IsBorderlessChecked}"
                                            IsThreeState="False"
                                            TabIndex="10" />
                                        <CheckBox
                                            Margin="0,0,0,5"
                                            VerticalAlignment="Center"
                                            Content="{l:Localize Road}"
                                            IsChecked="{Binding BuildingSettingsViewModel.IsRoadChecked}"
                                            IsThreeState="False"
                                            TabIndex="11" />
                                    </StackPanel>
                                </DockPanel>
                                <Button
                                    Height="Auto"
                                    Command="{Binding PlaceBuildingCommand}"
                                    Content="{l:Localize PlaceBuilding}"
                                    TabIndex="12" />
                            </StackPanel>
                        </Expander>



                    </DockPanel>
                    <GridSplitter
 Grid.Row="1"
 Grid.Column="0"
     Background="{DynamicResource ControlElevationBorderBrush}"
 Height="5"
 HorizontalAlignment="Stretch"
 VerticalAlignment="Center" />
                    <StackPanel Orientation="Vertical" Grid.Row="2">
                        <Expander IsExpanded="True"
      x:Name="GroupBoxSearchPresets"
      HorizontalAlignment="Stretch"
      DockPanel.Dock="Top"
      Header="{l:Localize Search}"
      HeaderStringFormat=" {0}:"
      IsEnabled="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>
                                <ui:AutoSuggestBox
              x:Name="TextBoxSearchPresets"
              VerticalContentAlignment="Center"
              PlaceholderText="Search"
              KeyUp="TextBoxSearchPresetsKeyUp"
              Text="{Binding PresetsTreeSearchViewModel.SearchText, UpdateSourceTrigger=PropertyChanged}"
              ToolTip="{l:Localize SearchToolTip}">

                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="GotFocus">
                                            <b:InvokeCommandAction Command="{Binding PresetsTreeSearchViewModel.GotFocusCommand}" />
                                        </b:EventTrigger>
                                        <b:EventTrigger EventName="LostFocus">
                                            <b:InvokeCommandAction Command="{Binding PresetsTreeSearchViewModel.LostFocusCommand}" />
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                    <ui:AutoSuggestBox.InputBindings>
                                        <KeyBinding
                      Key="Esc"
                      Command="{Binding PresetsTreeSearchViewModel.ClearSearchTextCommand}"
                      CommandParameter="{Binding ElementName=TextBoxSearchPresets}" />
                                    </ui:AutoSuggestBox.InputBindings>
                                </ui:AutoSuggestBox>
                                <!--<xctk:CheckComboBox
              Grid.Row="1"
              Grid.Column="0"
              Command="{Binding PresetsTreeSearchViewModel.GameVersionFilterChangedCommand}"
              Delimiter=", "
              DisplayMemberPath="Name"
              IsEditable="False"
              IsSelectAllActive="True"
              ItemsSource="{Binding PresetsTreeSearchViewModel.GameVersionFilters}"
              SelectAllContent="{l:Localize SelectAll}"
              SelectedMemberPath="IsSelected"
              Visibility="Visible" />-->
                            </Grid>
                        </Expander>
                        <Expander IsExpanded="True"
                            x:Name="GroupBoxPresets"
                            Width="{Binding ActualWidth, ElementName=BuildingsPanel, Mode=OneWay}"
                            Header="{Binding PresetsSectionHeader}"
                            IsEnabled="True" Height="236">
                            <TreeView x:Name="PresetsTree"   ItemsSource="{Binding PresetsTreeViewModel.FilteredItems}" VerticalContentAlignment="Stretch">
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type modelPresetsTree:GameHeaderTreeItem}" ItemsSource="{Binding Children}">
                                        <TextBlock FontWeight="SemiBold" Text="{Binding Header}" />
                                    </HierarchicalDataTemplate>
                                    <HierarchicalDataTemplate DataType="{x:Type modelPresetsTree:GenericTreeItem}" ItemsSource="{Binding Children}">
                                        <TextBlock Text="{Binding Header}" />
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>
                                <!--<TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                    <Setter Property="Visibility" Value="{Binding IsVisible, Mode=TwoWay, Converter={StaticResource converterBoolToVisibilityCollapsed}}" />
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                </Style>
                            </TreeView.ItemContainerStyle>-->
                                <!--
                            virtualization brings the SelectedItem out of view
                            VirtualizingStackPanel.IsVirtualizing="True"
                            VirtualizingStackPanel.VirtualizationMode="Recycling"
                        -->
                                <TreeView.InputBindings>
                                    <KeyBinding
                                        Key="Return"
                                        Command="{Binding PresetsTreeViewModel.ReturnKeyPressedCommand}"
                                        CommandParameter="{Binding SelectedItem, ElementName=PresetsTree}" />
                                </TreeView.InputBindings>
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="MouseDoubleClick">
                                        <b:InvokeCommandAction Command="{Binding PresetsTreeViewModel.DoubleClickCommand}" CommandParameter="{Binding SelectedItem, ElementName=PresetsTree}" />
                                    </b:EventTrigger>
                                    <!--<b:EventTrigger EventName="SelectedItemChanged">
                                <b:InvokeCommandAction Command="{Binding PresetsTreeViewModel.SelectedItemChangedCommand}"
                                                       CommandParameter="{Binding SelectedItem, ElementName=PresetsTree}" />
                            </b:EventTrigger>-->
                                </b:Interaction.Triggers>
                            </TreeView>

                        </Expander>
                    </StackPanel>
                </Grid>
                <StatusBar Grid.Row="2" Grid.ColumnSpan="3">
                    <StatusBarItem Content="{l:Localize StatusBarControls}" />
                    <StatusBarItem Margin="10,0,0,0" Content="{Binding StatusMessage}" />
                    <StatusBarItem
                    Margin="10,0,0,0"
                    HorizontalAlignment="Right"
                    Content="{Binding StatusMessageClipboard}" />
                </StatusBar>
            </Grid>
        </xctk:BusyIndicator>
    </Grid>
</ui:FluentWindow>