<Window x:Class="AnnoDesigner.MainWindow"
        x:Name="mainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:my="clr-namespace:AnnoDesigner"
        xmlns:coreModels="clr-namespace:AnnoDesigner.Core.Models;assembly=AnnoDesigner.Core"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:converter="clr-namespace:AnnoDesigner.Core.Converter;assembly=AnnoDesigner.Core"
        xmlns:modelPresetsTree="clr-namespace:AnnoDesigner.model.PresetsTree"
        xmlns:properties="clr-namespace:AnnoDesigner.Properties"
        xmlns:viewModel="clr-namespace:AnnoDesigner.viewmodel"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModel:MainViewModel, IsDesignTimeCreatable=True}"
        d:DesignHeight="480"
        d:DesignWidth="640"
        Title="Anno Designer"
        Icon="/AnnoDesigner;component/icon.ico"
        Height="{Binding Source={x:Static properties:Settings.Default},Path=MainWindowHeight, Mode=TwoWay}"
        Width="{Binding Source={x:Static properties:Settings.Default},Path=MainWindowWidth, Mode=TwoWay}"
        Top="{Binding Source={x:Static properties:Settings.Default},Path=MainWindowTop, Mode=TwoWay}"
        Left="{Binding Source={x:Static properties:Settings.Default},Path=MainWindowTop, Mode=TwoWay}"
        WindowState="{Binding Source={x:Static properties:Settings.Default},Path=MainWindowWindowState, Mode=TwoWay}"
        Loaded="WindowLoaded"
        Closing="WindowClosing">
    <Window.Resources>
        <converter:BoolToVisibilityConverter x:Key="converterBoolToVisibility"
                                             TrueValue="Visible"
                                             FalseValue="Hidden" />
        <converter:BoolToVisibilityConverter x:Key="converterBoolToVisibilityCollapsed"
                                             TrueValue="Visible"
                                             FalseValue="Collapsed" />
        <xctk:ColorToSolidColorBrushConverter x:Key="converterColorToSolidColorBrush" />
        <DataTemplate DataType="{x:Type coreModels:IconImage}">
            <StackPanel Orientation="Horizontal">
                <Viewbox Margin="5">
                    <Image Width="23"
                           Height="23"
                           Source="{Binding Path=Icon}" />
                </Viewbox>
                <TextBlock Margin="0,5,5,5"
                           VerticalAlignment="Center"
                           Text="{Binding Path=DisplayName}" />
            </StackPanel>
        </DataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type coreModels:AnnoObject}">
            <TextBlock Text="{Binding Label}" />
        </HierarchicalDataTemplate>
    </Window.Resources>
    <xctk:BusyIndicator x:Name="busyIndicator">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"
                                  MinWidth="100" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto"
                                  MinWidth="100" />
            </Grid.ColumnDefinitions>

            <Menu Name="Menu"
                  Height="23"
                  VerticalAlignment="Top"
                  Grid.ColumnSpan="3">
                <Menu.Resources>
                    <Style TargetType="{x:Type MenuItem}">
                        <!--<Setter Property="Foreground"
                            Value="Black" />-->
                        <Style.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Menu.Resources>
                <!--<Menu.DataContext>
                
            </Menu.DataContext>
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>-->
                <MenuItem Header="{Binding Path=File}"
                          TabIndex="20">
                    <MenuItem Header="{Binding Path=NewCanvas}"
                              Command="ApplicationCommands.New"
                              CommandTarget="{Binding ElementName=annoCanvas}" />
                    <MenuItem Header="{Binding Path=Open}"
                              Command="ApplicationCommands.Open"
                              CommandTarget="{Binding ElementName=annoCanvas}" />
                    <MenuItem Header="{Binding Path=Save}"
                              Command="ApplicationCommands.Save"
                              CommandTarget="{Binding ElementName=annoCanvas}" />
                    <MenuItem Header="{Binding Path=SaveAs}"
                              Command="ApplicationCommands.SaveAs"
                              CommandTarget="{Binding ElementName=annoCanvas}" />
                    <Separator />
                    <MenuItem Header="{Binding CopyLayoutToClipboard}"
                              Click="MenuCopyLayoutToClipboardClick" />
                    <MenuItem Header="{Binding LoadLayoutFromJson}"
                              Click="MenuLoadLayoutFromJsonClick" />
                    <Separator />
                    <MenuItem Header="{Binding Path=Exit}"
                              Command="{Binding CloseWindowCommand}"
                              CommandParameter="{Binding ElementName=mainWindow}" />
                </MenuItem>
                <MenuItem Header="{Binding Path=Extras}"
                          TabIndex="21">
                    <!--<MenuItem Header="Prefer local presets" IsCheckable="True" IsEnabled="False" />
                <MenuItem Header="Apply automatic color scheme" IsEnabled="False" />-->
                    <MenuItem Header="{Binding Path=Normalize}"
                              Click="MenuItemNormalizeClick" />
                    <MenuItem Header="{Binding Path=ResetZoom}"
                              Click="MenuItemResetZoomClick" />
                    <Separator />
                    <MenuItem Header="{Binding Path=RegisterFileExtension}"
                              Click="MenuItemRegisterExtensionClick" />
                    <MenuItem Header="{Binding Path=UnregisterFileExtension}"
                              Click="MenuItemUnregisterExtensionClick" />
                </MenuItem>
                <MenuItem Header="{Binding Path=Export}"
                          TabIndex="22">
                    <MenuItem Header="{Binding Path=ExportImage}"
                              Click="MenuItemExportImageClick" />
                    <Separator />
                    <MenuItem Header="{Binding Path=UseCurrentZoomOnExportedImage}"
                              IsCheckable="True"
                              IsChecked="False"
                              Name="MenuItemExportZoom" />
                    <MenuItem Header="{Binding Path=RenderSelectionHighlightsOnExportedImage}"
                              IsCheckable="True"
                              IsChecked="False"
                              Name="MenuItemExportSelection" />
                </MenuItem>
                <MenuItem Name="LanguageMenu"
                          Header="{Binding Path=Language}"
                          TabIndex="23"
                          Click="MenuItemLanguageClick">
                    <MenuItem Header="English"
                              IsCheckable="True"
                              IsChecked="True"
                              Name="MenuItemLanguageEng" />
                    <MenuItem Header="Deutsch"
                              IsCheckable="True"
                              IsChecked="False"
                              Name="MenuItemLanguageGer" />
                    <MenuItem Header="Français"
                              IsCheckable="True"
                              IsChecked="False"
                              Name="MenuItemLanguageFra" />
                    <!--<MenuItem Header="Español" IsCheckable="True" IsChecked="False" Name="MenuItemLanguageEsp" />-->
                    <!--<MenuItem Header="Italiano" IsCheckable="True" IsChecked="False" Name="MenuItemLanguageIta" />-->
                    <MenuItem Header="Polski"
                              IsCheckable="True"
                              IsChecked="False"
                              Name="MenuItemLanguagePol" />
                    <MenuItem Header="Русский"
                              IsCheckable="True"
                              IsChecked="False"
                              Name="MenuItemLanguageRus" />
                    <!--<MenuItem Header="český" IsCheckable="True" IsChecked="False" Name="MenuItemLanguageCze" />-->
                </MenuItem>
                <MenuItem Header="{Binding Path=ManageStats}"
                          TabIndex="24"
                          HorizontalAlignment="Right">
                    <MenuItem Header="{Binding Path=ShowStats}"
                              IsCheckable="True"
                              IsChecked="{Binding Source={x:Static properties:Settings.Default},Path=StatsShowStats, Mode=TwoWay}"
                              Click="MenuItemStatsShowStatsClick" />
                    <Separator></Separator>
                    <MenuItem Name="MenuItemStatsBuildingCount"
                              Header="{Binding Path=BuildingCount}"
                              IsCheckable="True"
                              IsChecked="{Binding Source={x:Static properties:Settings.Default},Path=StatsShowBuildingCount, Mode=TwoWay}"
                              IsEnabled="{Binding Source={x:Static properties:Settings.Default},Path=StatsShowStats, Mode=OneWay}"
                              Click="MenuItemStatsBuildingCountClick" />
                </MenuItem>
                <MenuItem Header="{Binding Path=Help}"
                          TabIndex="25"
                          HorizontalAlignment="Right">
                    <MenuItem Name="MenuItemVersion"
                              IsEnabled="False">
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}: {1}">
                                        <Binding Path="Version" />
                                        <Binding Path="VersionValue" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Name="MenuItemFileVersion"
                              IsEnabled="False">
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}: {1}">
                                        <Binding Path="FileVersion" />
                                        <Binding Path="FileVersionValue" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Name="MenuItemPresetsVersion"
                              IsEnabled="False">
                        <MenuItem.Header>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}: {1}">
                                        <Binding Path="PresetsVersion" />
                                        <Binding Path="PresetsVersionValue" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Header="{Binding Path=CheckForUpdates}"
                              Click="MenuItemVersionCheckImageClick" />
                    <MenuItem Name="AutomaticUpdateCheck"
                              IsCheckable="True"
                              Header="{Binding Path=EnableAutomaticUpdateCheck}"
                              IsChecked="{Binding Source={x:Static properties:Settings.Default},Path=EnableAutomaticUpdateCheck, Mode=TwoWay}"></MenuItem>
                    <Separator />
                    <MenuItem Header="{Binding Path=GoToProjectHomepage}"
                              Command="{Binding OpenProjectHomepageCommand}" />
                    <MenuItem Header="{Binding Path=OpenWelcomePage}"
                              Click="MenuItemOpenWelcomeClick"></MenuItem>
                    <MenuItem Header="{Binding Path=AboutAnnoDesigner}"
                              Click="MenuItemAboutClick" />
                </MenuItem>
                <Separator />
                <MenuItem Name="ShowGrid"
                          Header="{Binding Path=ShowGrid}"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default},Path=ShowGrid, Mode=TwoWay}"
                          Click="MenuItemGridClick"
                          TabIndex="26" />
                <MenuItem Name="ShowLabels"
                          Header="{Binding Path=ShowLabels}"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default},Path=ShowLabels, Mode=TwoWay}"
                          Click="MenuItemLabelClick"
                          TabIndex="27" />
                <MenuItem Name="ShowIcons"
                          Header="{Binding Path=ShowIcons}"
                          IsCheckable="True"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default},Path=ShowIcons, Mode=TwoWay}"
                          Click="MenuItemIconClick"
                          TabIndex="28" />
            </Menu>

            <Grid x:Name="gridMain"
                  Grid.Row="1"
                  Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"
                                      MinWidth="100" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition x:Name="colStatisticsView"
                                      Width="Auto"
                                      MinWidth="100" />
                    <!-- 
                                  MinWidth="100" -->
                </Grid.ColumnDefinitions>

                <my:AnnoCanvas x:Name="annoCanvas"
                               Grid.Column="0"
                               RenderGrid="True"
                               RenderIcon="True"
                               RenderLabel="True" />

                <GridSplitter x:Name="splitterStatisticsView"
                              Grid.Column="1"
                              Width="5"
                              VerticalAlignment="Stretch"
                              HorizontalAlignment="Center" />

                <my:StatisticsView x:Name="statisticsView"
                                   Grid.Column="2"
                                   DataContext="{Binding StatisticsViewModel}">
                </my:StatisticsView>

            </Grid>

            <GridSplitter Grid.Row="1"
                          Grid.Column="1"
                          Width="5"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Center" />

            <DockPanel Name="BuildingsPanel"
                       Grid.Column="2"
                       Grid.Row="1"
                       LastChildFill="True">
                <GroupBox Header="{Binding BuildingSettingsViewModel.TextHeader}"
                          DockPanel.Dock="Top">
                    <StackPanel>
                        <DockPanel LastChildFill="False"
                                   Height="26">
                            <Label Content="{Binding BuildingSettingsViewModel.TextSize}" />
                            <xctk:IntegerUpDown DockPanel.Dock="Right"
                                                Height="23"
                                                IsEnabled="True"
                                                Width="50"
                                                DefaultValue="4"
                                                DisplayDefaultValueOnEmptyText="True"
                                                Increment="1"
                                                Minimum="1"
                                                TabIndex="1"
                                                Value="{Binding BuildingSettingsViewModel.BuildingHeight}" />
                            <Label Content="x"
                                   DockPanel.Dock="Right" />
                            <xctk:IntegerUpDown DockPanel.Dock="Right"
                                                Height="23"
                                                IsEnabled="True"
                                                Width="50"
                                                DefaultValue="4"
                                                DisplayDefaultValueOnEmptyText="True"
                                                Increment="1"
                                                Minimum="1"
                                                TabIndex="0"
                                                Value="{Binding BuildingSettingsViewModel.BuildingWidth}" />
                        </DockPanel>
                        <DockPanel LastChildFill="False"
                                   Height="26">
                            <Label Content="{Binding BuildingSettingsViewModel.TextColor}" />
                            <xctk:ColorPicker x:Name="colorPicker"
                                              DockPanel.Dock="Right"
                                              Width="140"
                                              TabIndex="2"
                                              DisplayColorAndName="True"
                                              DisplayColorTooltip="True"
                                              ShowDropDownButton="True"
                                              ShowAvailableColors="True"
                                              ShowRecentColors="True"
                                              AvailableColorsSortingMode="HueSaturationBrightness"
                                              StandardButtonHeader="{Binding BuildingSettingsViewModel.TextStandard}"
                                              AdvancedButtonHeader="{Binding BuildingSettingsViewModel.TextAdvanced}"
                                              AvailableColorsHeader="{Binding BuildingSettingsViewModel.TextAvailableColors}"
                                              StandardColorsHeader="{Binding BuildingSettingsViewModel.TextStandardColors}"
                                              RecentColorsHeader="{Binding BuildingSettingsViewModel.TextRecentColors}"
                                              SelectedColor="{Binding BuildingSettingsViewModel.SelectedColor}" />
                        </DockPanel>
                        <DockPanel LastChildFill="False"
                                   Height="26">
                            <!--<Button Width="32"
                                    DockPanel.Dock="Right"
                                    Command="{Binding BuildingSettingsViewModel.ApplyColorToSelectionCommand}"
                                    ToolTip="{Binding BuildingSettingsViewModel.TextApplyColorToSelectionToolTip}">
                                <Button.Resources>
                                    <Style x:Key="stylePath"
                                           TargetType="{x:Type Path}">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled"
                                                     Value="True">
                                                <Setter Property="Fill"
                                                        Value="#FF000000" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled"
                                                     Value="False">
                                                <Setter Property="Fill"
                                                        Value="Gray" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Resources>
                                <Button.Content>
                                    <Grid Width="24"
                                          Height="24"
                                          Visibility="Visible">
                                        <Path Data="M10.237976,16.558633L15.362,21.68467C15.362,21.68467 15.362,32.671771 0,30.001748 3.9839783,29.020736 3.5959778,25.791718 5.9639893,20.122661 7.1269836,17.340638 10.237976,16.558633 10.237976,16.558633z M30.389984,0.00048406667C30.752991,0.0094867014 31.134979,0.14547426 31.494995,0.50648519 32.77597,1.7864956 31.215973,3.3455154 31.215973,3.3455152 31.215973,3.3455154 23.415985,11.147588 21.855988,12.708591 20.296997,14.270602 18.406982,18.619656 18.406982,18.619656L13.28299,13.495602C13.28299,13.495602 17.733978,11.707591 19.29599,10.147579 20.855988,8.5855531 28.655975,0.78248873 28.655975,0.78248861 28.655975,0.78248873 29.461975,-0.022526528 30.389984,0.00048406667z"
                                              Stretch="Uniform"
                                              Width="16"
                                              Height="16"
                                              Margin="0,0,0,0"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{StaticResource stylePath}">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <TransformGroup.Children>
                                                        <RotateTransform Angle="0" />
                                                        <ScaleTransform ScaleX="1"
                                                                        ScaleY="1" />
                                                    </TransformGroup.Children>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Button.Content>
                            </Button>-->
                            <!-- used when predefined colors are available -->
                            <xctk:SplitButton Width="48"
                                              DockPanel.Dock="Right"
                                              Command="{Binding BuildingSettingsViewModel.ApplyColorToSelectionCommand}"
                                              ToolTip="{Binding BuildingSettingsViewModel.TextApplyColorToSelectionToolTip}">
                                <xctk:SplitButton.Resources>
                                    <Style x:Key="stylePath"
                                           TargetType="{x:Type Path}">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled"
                                                     Value="True">
                                                <Setter Property="Fill"
                                                        Value="#FF000000" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled"
                                                     Value="False">
                                                <Setter Property="Fill"
                                                        Value="Gray" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </xctk:SplitButton.Resources>
                                <xctk:SplitButton.Content>
                                    <Grid Width="24"
                                          Height="24"
                                          Visibility="Visible">
                                        <Path Data="M10.237976,16.558633L15.362,21.68467C15.362,21.68467 15.362,32.671771 0,30.001748 3.9839783,29.020736 3.5959778,25.791718 5.9639893,20.122661 7.1269836,17.340638 10.237976,16.558633 10.237976,16.558633z M30.389984,0.00048406667C30.752991,0.0094867014 31.134979,0.14547426 31.494995,0.50648519 32.77597,1.7864956 31.215973,3.3455154 31.215973,3.3455152 31.215973,3.3455154 23.415985,11.147588 21.855988,12.708591 20.296997,14.270602 18.406982,18.619656 18.406982,18.619656L13.28299,13.495602C13.28299,13.495602 17.733978,11.707591 19.29599,10.147579 20.855988,8.5855531 28.655975,0.78248873 28.655975,0.78248861 28.655975,0.78248873 29.461975,-0.022526528 30.389984,0.00048406667z"
                                              Stretch="Uniform"
                                              Width="16"
                                              Height="16"
                                              Margin="0,0,0,0"
                                              RenderTransformOrigin="0.5,0.5"
                                              Style="{StaticResource stylePath}">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <TransformGroup.Children>
                                                        <RotateTransform Angle="0" />
                                                        <ScaleTransform ScaleX="1"
                                                                        ScaleY="1" />
                                                    </TransformGroup.Children>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </xctk:SplitButton.Content>
                                <xctk:SplitButton.DropDownContent>
                                    <Button Command="{Binding BuildingSettingsViewModel.ApplyPredefinedColorToSelectionCommand}"
                                            Content="{Binding BuildingSettingsViewModel.TextApplyPredefinedColorToSelection}"
                                            ToolTip="{Binding BuildingSettingsViewModel.TextApplyPredefinedColorToSelectionToolTip}" />
                                </xctk:SplitButton.DropDownContent>
                            </xctk:SplitButton>
                        </DockPanel>
                        <DockPanel>
                            <DockPanel.Resources>
                                <Style x:Key="styleRectangle"
                                       TargetType="{x:Type Rectangle}">
                                    <Setter Property="Margin"
                                            Value="2" />
                                </Style>
                            </DockPanel.Resources>
                            <Expander Header="{Binding BuildingSettingsViewModel.TextColorsInLayout}"
                                      MaxWidth="{Binding ElementName=BuildingsPanel, Path=ActualWidth, Mode=OneWay}"
                                      IsExpanded="False"
                                      Visibility="{Binding BuildingSettingsViewModel.ShowColorsInLayout, Converter={StaticResource converterBoolToVisibility}}"
                                      ToolTip="{Binding BuildingSettingsViewModel.TextColorsInLayoutToolTip}">
                                <ItemsControl ItemsSource="{Binding BuildingSettingsViewModel.ColorsInLayout}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Rectangle Fill="{Binding MediaColor, Converter={StaticResource converterColorToSolidColorBrush}}"
                                                       Style="{StaticResource styleRectangle}"
                                                       Stroke="#FFABADB3"
                                                       StrokeThickness="1"
                                                       ToolTip="{Binding}">
                                                <Rectangle.InputBindings>
                                                    <MouseBinding Gesture="LeftDoubleClick"
                                                                  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path=DataContext.BuildingSettingsViewModel.UseColorInLayoutCommand}"
                                                                  CommandParameter="{Binding}" />
                                                </Rectangle.InputBindings>
                                            </Rectangle>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Horizontal"
                                                       HorizontalAlignment="Right"
                                                       ItemHeight="20"
                                                       ItemWidth="20"
                                                       Margin="0" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Expander>
                        </DockPanel>
                        <DockPanel LastChildFill="False"
                                   Height="26">
                            <Label Content="{Binding BuildingSettingsViewModel.TextBuildingName}" />
                            <TextBox DockPanel.Dock="Right"
                                     Height="23"
                                     IsEnabled="True"
                                     Text="{Binding BuildingSettingsViewModel.BuildingName}"
                                     Width="140"
                                     TabIndex="4" />
                            <TextBox DockPanel.Dock="Right"
                                     Height="10"
                                     IsEnabled="False"
                                     Text="{Binding BuildingSettingsViewModel.BuildingIdentifier}"
                                     Visibility="Collapsed"
                                     Width="140" />
                        </DockPanel>
                        <DockPanel LastChildFill="False"
                                   Height="46">
                            <Label Content="{Binding BuildingSettingsViewModel.TextIcon}"
                                   VerticalAlignment="Center" />
                            <ComboBox DockPanel.Dock="Right"
                                      Width="140"
                                      Height="46"
                                      IsEnabled="True"
                                      x:Name="comboBoxIcon"
                                      SelectedIndex="0"
                                      TabIndex="6"
                                      TextSearch.TextPath="DisplayName">
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True"
                                                            VirtualizingStackPanel.VirtualizationMode="Recycling"></VirtualizingStackPanel>
                                </ItemsPanelTemplate>
                            </ComboBox>
                        </DockPanel>
                        <DockPanel LastChildFill="False"
                                   Height="26">
                            <Label Content="{Binding BuildingSettingsViewModel.TextInfluenceType}" />
                            <ComboBox DockPanel.Dock="Right"
                                      Width="140"
                                      Height="22"
                                      IsEnabled="True"
                                      x:Name="comboxBoxInfluenceType"
                                      SelectedIndex="0"
                                      TabIndex="6"
                                      SelectedValuePath="Key"
                                      DisplayMemberPath="Value"
                                      SelectionChanged="ComboxBoxInfluenceType_SelectionChanged" />
                        </DockPanel>
                        <DockPanel x:Name="dockPanelInfluenceRadius"
                                   LastChildFill="False"
                                   Height="26"
                                   Visibility="Visible">
                            <Label Content="{Binding BuildingSettingsViewModel.TextRadius}" />
                            <xctk:DoubleUpDown DockPanel.Dock="Right"
                                               Height="23"
                                               Width="140"
                                               IsEnabled="True"
                                               DefaultValue="0"
                                               DisplayDefaultValueOnEmptyText="True"
                                               Increment="1"
                                               Minimum="0"
                                               TabIndex="8"
                                               Value="{Binding BuildingSettingsViewModel.BuildingRadius}" />
                        </DockPanel>
                        <DockPanel x:Name="dockPanelInfluenceRange"
                                   LastChildFill="False"
                                   Height="26"
                                   Visibility="Visible">
                            <Label Content="{Binding BuildingSettingsViewModel.TextDistance}" />
                            <xctk:DoubleUpDown DockPanel.Dock="Right"
                                               Height="23"
                                               Width="140"
                                               IsEnabled="True"
                                               DefaultValue="0"
                                               DisplayDefaultValueOnEmptyText="True"
                                               Increment="1"
                                               Minimum="0"
                                               AllowSpin="True"
                                               TabIndex="9"
                                               Value="{Binding BuildingSettingsViewModel.BuildingInfluenceRange}" />
                        </DockPanel>
                        <DockPanel x:Name="dockPanelPavedStreet"
                                   LastChildFill="False"
                                   Height="25"
                                   Visibility="Visible">
                            <CheckBox Content="{Binding BuildingSettingsViewModel.TextPavedStreet}"
                                      Name="CheckBoxPavedStreet"
                                      ToolTip="{Binding BuildingSettingsViewModel.TextPavedStreetToolTip}"
                                      Click="CheckBoxPavedStreetClick"
                                      DockPanel.Dock="Right"
                                      Margin="0,3,0,5"
                                      IsThreeState="False"
                                      IsChecked="{Binding BuildingSettingsViewModel.IsPavedStreet}" />
                        </DockPanel>
                        <DockPanel LastChildFill="False">
                            <Label Content="{Binding BuildingSettingsViewModel.TextOptions}" />
                            <StackPanel Orientation="Vertical"
                                        DockPanel.Dock="Right">
                                <CheckBox Content="{Binding BuildingSettingsViewModel.TextEnableLabel}"
                                          Margin="0,5,0,5"
                                          VerticalAlignment="Center"
                                          TabIndex="9"
                                          IsThreeState="False"
                                          IsChecked="{Binding BuildingSettingsViewModel.IsEnableLabelChecked}" />
                                <CheckBox Content="{Binding BuildingSettingsViewModel.TextBorderless}"
                                          Margin="0,0,0,5"
                                          VerticalAlignment="Center"
                                          TabIndex="10"
                                          IsThreeState="False"
                                          IsChecked="{Binding BuildingSettingsViewModel.IsBorderlessChecked}" />
                                <CheckBox Content="{Binding BuildingSettingsViewModel.TextRoad}"
                                          Margin="0,0,0,5"
                                          VerticalAlignment="Center"
                                          TabIndex="11"
                                          IsThreeState="False"
                                          IsChecked="{Binding BuildingSettingsViewModel.IsRoadChecked}" />
                            </StackPanel>
                        </DockPanel>
                        <Button Click="ButtonPlaceBuildingClick"
                                Content="{Binding BuildingSettingsViewModel.TextPlaceBuilding}"
                                Height="23"
                                TabIndex="12" />
                    </StackPanel>
                </GroupBox>

                <GroupBox x:Name="GroupBoxSearchPresets"
                          Header="{Binding PresetsTreeSearchViewModel.TextSearch}"
                          HeaderStringFormat=" {0}:"
                          IsEnabled="True"
                          Height="Auto"
                          HorizontalAlignment="Stretch"
                          DockPanel.Dock="Top">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBox x:Name="TextBoxSearchPresets"
                                 Grid.Column="0"
                                 Grid.Row="0"
                                 Height="23"
                                 KeyUp="TextBoxSearchPresetsKeyUp"
                                 GotFocus="TextBoxSearchPresetsGotFocus"
                                 VerticalContentAlignment="Center"
                                 ToolTip="{Binding PresetsTreeSearchViewModel.TextSearchToolTip}"
                                 Text="{Binding PresetsTreeSearchViewModel.SearchText, UpdateSourceTrigger=PropertyChanged}">
                        </TextBox>
                        <!-- Maybe add a clear text box button eventually. (Needs styling etc)-->
                        <!--<Button Grid.Column="1"
                            Content="X"
                            Height="20"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Margin="0,0,2,0"
                            Background="Transparent"
                            BorderThickness="0"
                            />-->
                        <xctk:CheckComboBox Grid.Column="0"
                                            Grid.Row="1"
                                            IsEditable="False"
                                            Visibility="Collapsed" />
                    </Grid>
                </GroupBox>
                <GroupBox x:Name="GroupBoxPresets"
                          Header="Building presets - not loaded"
                          IsEnabled="True"
                          Width="{Binding ElementName=BuildingsPanel, Path=ActualWidth, Mode=OneWay}"
                          DockPanel.Dock="Top">
                    <TreeView x:Name="PresetsTree"
                              ItemsSource="{Binding PresetsTreeViewModel.FilteredItems}"
                              VirtualizingStackPanel.IsVirtualizing="True"
                              VirtualizingStackPanel.VirtualizationMode="Recycling">
                        <TreeView.InputBindings>
                            <KeyBinding Command="{Binding PresetsTreeViewModel.ReturnKeyPressedCommand}"
                                        Key="Return"
                                        CommandParameter="{Binding SelectedItem, ElementName=PresetsTree}" />
                        </TreeView.InputBindings>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding PresetsTreeViewModel.DoubleClickCommand}"
                                                       CommandParameter="{Binding SelectedItem, ElementName=PresetsTree}" />
                            </i:EventTrigger>
                            <!--<i:EventTrigger EventName="SelectedItemChanged">
                                <i:InvokeCommandAction Command="{Binding PresetsTreeViewModel.SelectedItemChangedCommand}"
                                                       CommandParameter="{Binding SelectedItem, ElementName=PresetsTree}" />
                            </i:EventTrigger>-->
                        </i:Interaction.Triggers>
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type modelPresetsTree:GameHeaderTreeItem}"
                                                      ItemsSource="{Binding Children}">
                                <TextBlock Text="{Binding Header}"
                                           FontWeight="SemiBold" />
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type modelPresetsTree:GenericTreeItem}"
                                                      ItemsSource="{Binding Children}">
                                <TextBlock Text="{Binding Header}" />
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded"
                                        Value="{Binding IsExpanded, Mode=TwoWay}" />
                                <Setter Property="Visibility"
                                        Value="{Binding IsVisible, Mode=TwoWay, Converter={StaticResource converterBoolToVisibilityCollapsed}}" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                </GroupBox>
            </DockPanel>
            <StatusBar Grid.Row="2"
                       Grid.ColumnSpan="3">
                <StatusBarItem Content="{Binding StatusBarControls}" />
                <StatusBarItem Name="StatusBarItemStatus"
                               Content="Standard"
                               Margin="10,0,0,0" />
                <StatusBarItem Name="StatusBarItemClipboardStatus"
                               Margin="10,0,0,0"
                               HorizontalAlignment="Right" />
            </StatusBar>
        </Grid>
    </xctk:BusyIndicator>
</Window>